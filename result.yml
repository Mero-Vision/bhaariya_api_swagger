openapi: 3.0.0
info:
  title: Bhaariya API Swagger
  description: Bhaariya API documentation
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Mero Vision
    url: https://merovision.com
    email: merovision720@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: https://api.bhaariya.com/
    description: server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Admin
  - name: Admin > Auth
  - name: Admin > Site Settings
  - name: Admin > Admin
  - name: Admin > Category
  - name: Admin > Sub Category
  - name: Admin > Brand
  - name: Admin > Products
  - name: Customer
  - name: Customer > Site Settings
  - name: Customer > Category
  - name: Customer > Brand
  - name: Vendor
  - name: Vendor > Auth
  - name: Vendor > Product
  - name: Vendor > Brand
  - name: Vendor > Category
  - name: Vendor > Vendor
paths:
  /api/admin/login:
    post:
      tags:
        - Admin > Auth
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: info@bhaariya.com
                password:
                  type: string
                  example: Password
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/site-settings:
    post:
      tags:
        - Admin > Site Settings
      summary: store site settings
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                website_title:
                  type: string
                  example: Cartyne
                logo:
                  type: string
                  format: binary
                address:
                  type: string
                  example: KTM
                contact_no:
                  type: integer
                  example: '9825915122'
                home_page_banner_1:
                  type: string
                  format: binary
                home_page_banner_2:
                  type: string
                  format: binary
                home_page_banner_3:
                  type: string
                  format: binary
                privacy_policy:
                  type: string
                terms_conditions:
                  type: string
                facebook_link:
                  type: string
                instagram_link:
                  type: string
                tiktok_link:
                  type: string
                whatsapp_number:
                  type: string
                footer_background_color:
                  type: string
                footer_text_color:
                  type: string
                primary_nav_background_color:
                  type: string
                primary_nav_text_color:
                  type: string
                secondary_nav_background_color:
                  type: string
                secondary_nav_text_color:
                  type: string
                email:
                  type: string
                about_us:
                  type: string
                  example: hy
                fav_icon:
                  type: string
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Site Settings
      summary: show site setting data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/user/{id}:
    get:
      tags:
        - Admin > Admin
      summary: show authenticated user data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/change-password:
    post:
      tags:
        - Admin > Admin
      summary: change password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                  example: password
                password:
                  type: string
                  example: Password
                password_confirmation:
                  type: string
                  example: Password
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/update-profile-image/{user_id}:
    post:
      tags:
        - Admin > Admin
      summary: change customer profile image
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profile_image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/category:
    post:
      tags:
        - Admin > Category
      summary: store category
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Drink
                category_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Category
      summary: show all category
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/category/{id}:
    delete:
      tags:
        - Admin > Category
      summary: delete category
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Category
      summary: update category
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Bag
                category_image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/sub-category:
    post:
      tags:
        - Admin > Sub Category
      summary: store sub category
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Beer
                sub_category_image:
                  type: string
                  format: binary
                category_id:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Sub Category
      summary: show all sub category
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/sub-category/{id}:
    delete:
      tags:
        - Admin > Sub Category
      summary: delete sub category
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Sub Category
      summary: update sub category
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Bag
                category_image:
                  type: string
                  format: binary
                category_id:
                  type: integer
                  example: '1'
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/brand:
    post:
      tags:
        - Admin > Brand
      summary: store brand data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Nike
                brand_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Brand
      summary: show all brand list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/brand/{id}:
    delete:
      tags:
        - Admin > Brand
      summary: delete brand
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Brand
      summary: update brand data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                brand_image:
                  type: string
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/products:
    get:
      tags:
        - Admin > Products
      summary: show all products
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/products/{id}:
    get:
      tags:
        - Admin > Products
      summary: show single view product data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/site-settings:
    get:
      tags:
        - Customer > Site Settings
      summary: show site setting data
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/category:
    get:
      tags:
        - Customer > Category
      summary: show all category
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/category/{slug}:
    get:
      tags:
        - Customer > Category
      summary: show single category with products data
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/brand:
    get:
      tags:
        - Customer > Brand
      summary: show all brand list
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/brand/{slug}:
    get:
      tags:
        - Customer > Brand
      summary: show brand products
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/vendor/signup:
    post:
      tags:
        - Vendor > Auth
      summary: signup vendor
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie
                email:
                  type: string
                  example: hanciephago@gmail.com
                password:
                  type: string
                  example: Password
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/vendor/login:
    post:
      tags:
        - Vendor > Auth
      summary: vendor login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: hanciephago@gmail.com
                password:
                  type: string
                  example: Password
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/vendor/products:
    post:
      tags:
        - Vendor > Product
      summary: store product
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                category_id:
                  type: integer
                  example: '1'
                sub_category_id:
                  type: integer
                  example: '1'
                brand_id:
                  type: integer
                  example: '1'
                vendor_id:
                  type: integer
                  example: '1'
                name:
                  type: string
                  example: Organic Honey
                description:
                  type: string
                  example: Raw organic honey from Himalayas
                short_description:
                  type: string
                  example: 100% pure and organic
                selling_price:
                  type: integer
                  example: '1000'
                cross_price:
                  type: integer
                  example: '1500'
                unit_price:
                  type: integer
                  example: '590'
                stock_quantity:
                  type: integer
                  example: '200'
                product_weight:
                  type: string
                  example: 500 gm
                sku:
                  type: string
                  example: DSAFDSH
                product_image[]:
                  type: string
                  format: binary
                allow_negative_stock:
                  type: boolean
                  example: 'true'
                varients[0][size]:
                  type: string
                  example: 500ml
                varients[0][color]:
                  type: string
                varients[0][varient_selling_price]:
                  type: number
                  example: '12.99'
                varients[0][varient_cross_price]:
                  type: number
                  example: '15.00'
                varients[0][varient_unit_price]:
                  type: number
                  example: '11.99'
                varients[0][varient_stock_quantity]:
                  type: integer
                  example: '25'
                varients[0][varient_sku]:
                  type: string
                  example: HONEY50
                varients[0][unit]:
                  type: string
                  example: ml
                varients[0][images][]:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Vendor > Product
      summary: show my products
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/vendor/products/{id}:
    post:
      tags:
        - Vendor > Product
      summary: update product
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                category_id:
                  type: integer
                  example: '1'
                sub_category_id:
                  type: integer
                  example: '1'
                brand_id:
                  type: integer
                  example: '1'
                vendor_id:
                  type: integer
                  example: '1'
                name:
                  type: string
                  example: Organic Honey
                description:
                  type: string
                  example: Raw organic honey from Himalayas
                short_description:
                  type: string
                  example: 100% pure and organic
                selling_price:
                  type: integer
                  example: '1000'
                cross_price:
                  type: integer
                  example: '1500'
                unit_price:
                  type: integer
                  example: '590'
                stock_quantity:
                  type: integer
                  example: '200'
                product_weight:
                  type: string
                  example: 500 gm
                sku:
                  type: string
                  example: DSAFDSH
                product_image[]:
                  type: string
                  format: binary
                allow_negative_stock:
                  type: boolean
                  example: 'true'
                varients[0][id]:
                  type: integer
                  example: '1'
                varients[0][size]:
                  type: string
                  example: 500ml
                varients[0][color]:
                  type: string
                varients[0][varient_selling_price]:
                  type: number
                  example: '12.99'
                varients[0][varient_cross_price]:
                  type: number
                  example: '15.00'
                varients[0][varient_unit_price]:
                  type: number
                  example: '11.99'
                varients[0][varient_stock_quantity]:
                  type: integer
                  example: '25'
                varients[0][varient_sku]:
                  type: string
                  example: HONEY50
                varients[0][unit]:
                  type: string
                  example: ml
                varients[0][images][]:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Vendor > Product
      summary: delete product
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/vendor/products/6:
    get:
      tags:
        - Vendor > Product
      summary: show single product data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/vendor/brands:
    get:
      tags:
        - Vendor > Brand
      summary: show all brands
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/vendor/category:
    get:
      tags:
        - Vendor > Category
      summary: show all category
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/vendor/user/{vendor_id}:
    get:
      tags:
        - Vendor > Vendor
      summary: show vendor data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: vendor_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
